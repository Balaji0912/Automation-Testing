package implicitAndExplicitWaits;

import java.time.Duration;
import java.util.Arrays;
import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
//import io.opentelemetry.exporter.logging.SystemOutLogRecordExporter;

public class listOfProductswithwaits {


		public static void main(String[] args) throws InterruptedException {
			String[] names = { "Walnuts", "Cucumber", "Brocolli", "Potato", "Beetroot", "Grapes" };
//			WebDriver driver = new ChromeDriver();
			WebDriver driver = new EdgeDriver();
			//implicit wait 
			driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(3));
			//explicit wait -> wait class
			WebDriverWait w=new WebDriverWait(driver,Duration.ofSeconds(10));
			driver.manage().window().maximize();
			driver.get("https://rahulshettyacademy.com/seleniumPractise/#/");
			List<WebElement> products = driver.findElements(By.xpath("//h4[@class='product-name']"));
			
////			Using nested loops menthods, not much effective
//			for(int j=0;j<names.length;j++) {
//				for (int i=0;i<products.size();i++) {
//					
//					String name = products.get(i).getText();
////					
//					if(name.contains(names[j])) {
//					// clicking ADD TO CART button of the i-th product, 
//					// this add to card button text changes to ADDED when clicked, so sleep is needed
//			
////					driver.findElements(By.xpath("//button[text()='ADD TO CART']")).get(i).click();
////					Thread.sleep(5000);
	//
//					// as the above button text locator is inconsistent here we're using its parent tag
//					driver.findElements(By.xpath("//div[@class='product-action']")).get(i).click();
//					//scroll bar functionality
//					  Actions act = new Actions(driver);
//					  act.sendKeys(Keys.PAGE_UP).build().perform();  
//					Thread.sleep(2000);
//					}
//				}
//			}
			

//			created an object of the class and invoked a method which is not static
			listOfProductswithwaits a = new listOfProductswithwaits();
			a.addCart(driver, products, names);
			driver.findElement(By.cssSelector("img[alt='Cart']")).click();
			driver.findElement(By.xpath("//button[text()='PROCEED TO CHECKOUT']")).click();
			driver.findElement(By.cssSelector("input.promoCode")).sendKeys("rahulshettyacademy");
			driver.findElement(By.cssSelector("button.promoBtn")).click();
//			w.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[class='promoInfo']")));
//			System.out.println(driver.findElement(By.xpath("//span[class='promoInfo']")).getText());
			w.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[@class='promoInfo']")));
			Assert.assertEquals(driver.findElement(By.xpath("//span[@class='promoInfo']")).getText(), "Code applied ..!");
			System.out.println(driver.findElement(By.xpath("//span[@class='promoInfo']")).getText());
			driver.quit();
		}


		
		public void addCart(WebDriver driver, List<WebElement> products, String[] names) {
//			Using Arraylist concept
			int j = 0;
			for (int i = 0; i < products.size(); i++) {

				String[] name = products.get(i).getText().split("-");
				String actualName = name[0].trim();

				List<String> namesList = Arrays.asList(names);

				if (namesList.contains(actualName)) {
//					// clicking ADD TO CART button of the i-th product, this add to card button text
//					// changes to ADDED when clicked, so sleep is added
//					driver.findElements(By.xpath("//button[text()='ADD TO CART']")).get(i).click();
//					Thread.sleep(5000);
	//
//					// as the above button text locator is inconsistent here we're using its parent tag
					driver.findElements(By.xpath("//div[@class='product-action']/button")).get(i).click();

					j++;
					if (j == namesList.size()) {
						break;
					}

				}
			}
		}

	}
